{"version":3,"file":"static/js/544.b95134e2.chunk.js","mappings":"gNAGaA,EAAOC,EAAAA,GAAAA,GAAH,sLAQJC,EAAYD,EAAAA,GAAAA,GAAH,0YAeTE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kQAaVI,EAASJ,EAAAA,GAAAA,IAAH,uI,mBCjBnB,EAnBmB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACQ,SAACR,EAAD,UACKM,EAAOG,OAAS,GAAKH,EAAOI,KAAI,SAAAC,GAC7B,OAAO,SAACT,EAAD,WACH,UAACC,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAKR,GAApD,WACI,SAACF,EAAD,CAAQW,IAA2B,OAAtBL,EAAMM,YACb,qEADO,0CAE4BN,EAAMM,aAC3CC,IAAKP,EAAMQ,SACf,gCAAQR,EAAMQ,aANCR,EAAME,GAShC,KAGhB,C,4FCjBYO,EAAoBnB,EAAAA,GAAAA,IAAH,sEAKjBoB,GAAkBpB,EAAAA,EAAAA,IAAOqB,EAAAA,EAAPrB,CAAH,uE,SCU5B,EAhBmB,SAAC,GAAsC,IAApCsB,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,YAElC,OACI,SAACL,EAAD,WACI,SAACC,EAAD,CACIK,MAAOD,EACPE,KAAK,QACLJ,KAAMA,EACNK,QAAQ,WACRC,MAAM,UACNL,SAAUA,KAIzB,C,oICyCD,UAhDa,WACT,OAAwBM,EAAAA,EAAAA,UAAS,GAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAAsCD,EAAAA,EAAAA,UAAS,GAA/C,eAAOL,EAAP,KAAoBO,EAApB,KACA,GAAoDF,EAAAA,EAAAA,WAAS,GAA7D,eAAOG,EAAP,KAA2BC,EAA3B,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,MAGAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+BC,EAAAA,EAAAA,IAAef,GAF9C,UAEcgB,EAFd,OAGQH,GAAe,yBAAUG,EAASC,QAAnB,IACfR,EAAeO,EAASd,aACxBgB,QAAQC,IAAIjB,GAEoB,IAA5Bc,EAASC,QAAQ/B,OAP7B,iDAWqC,IAAzB8B,EAASd,aACTS,GAAsB,GAEG,IAAzBK,EAASd,aACTS,GAAsB,GAflC,kDAmBQO,QAAQE,MAAR,MAnBR,2DADY,uBAAC,WAAD,wBAuBZC,EAEH,GAAC,CAACrB,EAAME,IAGT,IAAMoB,EAAe,SAACC,EAAGC,GACrBhB,EAAQgB,EACX,EAED,OACI,gCACKd,IAAsB,SAAC,IAAD,CAAYV,KAAMA,EAAME,YAAaA,EAAaD,SAAUqB,KACnF,SAAC,IAAD,CAAYvC,OAAQ6B,IACnBF,IAAsB,SAAC,IAAD,CAAYV,KAAMA,EAAME,YAAaA,EAAaD,SAAUqB,MAG9F,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\"\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 280px);\n  justify-content: center;\n  gap: 20px;\n  padding: 20px 0;\n  background-color: #fff;\n`\nexport const MovieItem = styled.li`\n    margin: 0 auto;\n    border: 1px solid lightgray;\n    width: 280px;\n  border-radius: 13px;\n  transition: box-shadow 250ms ease-in-out, border 150ms ease-in-out,transform 250ms ease-in-out ;\n  :hover{\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.6);\n    transform: scale(1.05);\n  }\n    > a {\n        text-overflow: clip;\n    text-decoration: none;\n  }\n`\nexport const StyledLink = styled(Link)`\n    object-fit: cover;\n    overflow: hidden;\n    width: 280px;  \n    display: flex;\n    flex-direction:column;\n    border-radius: 13px;\n    color:black;\n    > span {\n    padding-left: 10px;\n    padding-bottom: 3px;\n  }    \n`\nexport const Poster = styled.img`\n    width: 280px;\n    height: 420px;\n    margin-bottom:10px;\n    object-fit: cover;\n    overflow: hidden;\n`\n","import { List, Poster, StyledLink, MovieItem } from \"./MoviesList.styled\"\nimport {useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ Movies }) => {\n    const location = useLocation();\n    return (\n            <List>\n                {Movies.length > 0 && Movies.map(movie => {\n                    return <MovieItem key={movie.id}>\n                        <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                            <Poster src={movie.poster_path === null\n                                ? 'https://dummyimage.com/400x600/7d7d7d/fff.jpg&text=image+not+found'\n                                : `https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n                                alt={movie.title} />\n                            <span> {movie.title}</span>\n                        </StyledLink>\n                    </MovieItem>\n                })}\n            </List>\n    )\n}\n\nexport default MoviesList","import { Pagination } from '@mui/material';\nimport styled from \"styled-components\";\n\nexport const PaginationWrapper = styled.div`\n   display:flex;\n   justify-content:center;\n`\n\nexport const PaginationPanel = styled(Pagination)`\n    margin-top:30px;\n    margin-bottom:30px;\n`","import { PaginationPanel, PaginationWrapper } from \"./Pagination.styled\";\n\nconst Pagination = ({ page, onChange, total_pages  }) => {\n    // const count = 100\n    return (\n        <PaginationWrapper>\n            <PaginationPanel\n                count={total_pages}\n                size=\"large\"\n                page={page}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={onChange }\n            />\n        </PaginationWrapper>\n    )\n}\n\nexport default Pagination","import { useEffect, useState } from \"react\"\nimport Pagination from \"components/Pagination/Pagination\"\n// import { toast } from 'react-hot-toast';\n\nimport MoviesList from \"components/MoviesList/MoviesList\"\nimport { getTrendMovies } from \"services/movieApi\"\n\n\n\nconst Home = () => {\n    const [page, setPage] = useState(1);\n    const [total_pages, setTotal_pages] = useState(2)\n    const [responsePagination, setResponsePagination] = useState(false)\n    const [trendMovies, setTrendMovies] = useState([])\n  \n\n    useEffect(() => {\n        async function getMovies() {\n            try {\n                const response = await getTrendMovies(page)\n                setTrendMovies(() => [...response.results])\n                setTotal_pages(response.total_pages)\n                console.log(total_pages)\n\n                if (response.results.length === 0) {\n                    return \n                    // toast('Sorry, try again later');\n                  }\n                if (response.total_pages !== 0) {\n                    setResponsePagination(true)\n                }\n                if (response.total_pages === 0) {\n                    setResponsePagination(false)\n                }\n                \n            } catch (e) {\n                console.error(e)\n          }    \n       }\n        getMovies()\n        return \n    },[page, total_pages]   \n    )    \n    \n    const handleChange = (e, p) => {\n        setPage(p);\n    };\n          \n    return (\n        <>\n            {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n            <MoviesList Movies={trendMovies}  />\n            {responsePagination && <Pagination page={page} total_pages={total_pages} onChange={handleChange} />}\n        </>        \n    )\n}\n\nexport default Home;"],"names":["List","styled","MovieItem","StyledLink","Link","Poster","Movies","location","useLocation","length","map","movie","to","id","state","from","src","poster_path","alt","title","PaginationWrapper","PaginationPanel","Pagination","page","onChange","total_pages","count","size","variant","shape","useState","setPage","setTotal_pages","responsePagination","setResponsePagination","trendMovies","setTrendMovies","useEffect","getTrendMovies","response","results","console","log","error","getMovies","handleChange","e","p"],"sourceRoot":""}